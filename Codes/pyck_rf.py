# -*- coding: utf-8 -*-
"""PyCK_RF.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10TUdIDLfiJ5Dy4fhsodLcApa8hkmKMmM
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn

from google.colab import drive
drive.mount('/content/drive')

path = "drive/My Drive/CombinedInput.xlsx"
df = pd.read_excel(path)

df.head()

df.columns

df.rename({'Unnamed: 0':'Labels'},axis = 1, inplace=True)

df.head()

df.shape

from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import confusion_matrix
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn import metrics

df.columns

X = df.iloc[:,1:].values
y = df.iloc[:,0].values

X

X.shape

y

y.shape

# Creating the Training and Test set from data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.30, random_state = 42)

# Feature Scaling
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

print('Training Features Shape:', X_train.shape)
print('Training Labels Shape:', y_train.shape)
print('Testing Features Shape:', X_test.shape)
print('Testing Labels Shape:', y_test.shape)

classifier = RandomForestClassifier(n_estimators=10, max_depth=5, max_features='sqrt', random_state = 42)
classifier.fit(X_train, y_train)

# Predicting the Test set results
y_pred = classifier.predict(X_test)

from sklearn.metrics import classification_report, confusion_matrix, accuracy_score
result1 = classification_report(y_test, y_pred)
print("Classification Report:",)
print (result1)

result2 = accuracy_score(y_test,y_pred)
print("Accuracy:",result2)

# Making the Confusion Matrix
print(pd.crosstab(y_test, y_pred, rownames=['Actual'], colnames=['Predicted']))

print("Accuracy:",metrics.accuracy_score(y_test, y_pred))