# -*- coding: utf-8 -*-
"""PyCK.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TbJK45kBKTmothGDRDlezyTCqNgPbg8k
"""

import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt
from matplotlib.cm import register_cmap
from scipy import stats
from sklearn.decomposition import PCA
import seaborn

from google.colab import drive
drive.mount('/content/drive')

path = "drive/My Drive/SM_MV_.csv"
df1 = pd.read_csv(path)

df1.head(3)

df = df1.transpose()
df.head(3)

new_header = df.iloc[0]
new_header

df = df[1:]
df.head(3)

df.columns = new_header
df.head(3)

x = df.columns
x = x[1:2798]
x1 = x.values.tolist()
# x1

from sklearn.preprocessing import RobustScaler
scaler = RobustScaler()

df1 = df.drop(['Label'], axis=1, inplace=False)
df1.head(3)

df_robust = pd.DataFrame(StandardScaler().fit_transform(df1), columns=df1.columns)
df_robust.head(3)

X_std = StandardScaler().fit_transform(df1)
X_std

mean_vec = np.mean(X_std,axis = 0)
cov_mat = (X_std - mean_vec).T.dot((X_std-mean_vec))/ (X_std.shape[0]-1)

print('Covariance matrix \n%s' %cov_mat)

cov_mat = np.cov(X_std.T)
eig_vals, eig_vecs = np.linalg.eig(cov_mat)

print('Eigenvectors \n%s' %eig_vecs)

print('Eigenvalues \n%s' %eig_vals)

eig = pd.DataFrame(eig_vals)
eig.rename({0:'Eigenvalues'},axis = 1, inplace=True)
eig

eig.insert(0,"Peptides",x1,allow_duplicates=False)
eig.head()

pca = PCA(n_components=2)
pca.fit_transform(df_robust)

pca = PCA(n_components=0.9).fit(X_std)
plt.plot(np.cumsum(pca.explained_variance_ratio_))
plt.xlabel('no of components')
plt.ylabel('cumulative explained variance')
plt.show()

pca.n_components_

pca.explained_variance_ratio_

df_new = pd.DataFrame(pca.components_,columns=df_robust.columns)
df_new

df_new = pd.DataFrame(pca.components_,columns=df_robust.columns)
df_new

dff = df_new.apply(abs)
dff

a = dff.sum(axis=0)
b = a.sort_values(ascending=False)
b

b.head(10)

c = pd.DataFrame(b)
c.rename({0:'Sum'},axis = 1, inplace=True)
d = c.iloc[:300]
d

d.to_csv("drive/My Drive/SM_features.csv")

df_robust.head()

m=df['Label']
m1=m.values.tolist()
m1

df_robust.insert(0,"Label",m1,allow_duplicates=False)
df_robust.head(3)

import plotly.express as px
from sklearn.decomposition import PCA

df2 = df_robust
X = df2.loc[:,df2.columns!='Label']

pca = PCA(n_components=2)
components = pca.fit_transform(X)

fig = px.scatter(components, x=0, y=1, color=df2['Label'])
fig.show()

df2['Label'].replace("High Grade",1,inplace=True)
df2['Label'].replace("Low Grade",0,inplace=True)
df2['Label']

import plotly.express as px
from sklearn.decomposition import PCA

X = df2.loc[:,df2.columns!='Label']

pca = PCA(n_components=3)
components = pca.fit_transform(X)

total_var = pca.explained_variance_ratio_.sum() * 100

fig = px.scatter_3d(
    components, x=0, y=1, z=2, color=df2['Label'],
    title=f'Total Explained Variance: {total_var:.2f}%',
    labels={'0': 'PC 1', '1': 'PC 2', '2': 'PC 3'}
)
fig.show()